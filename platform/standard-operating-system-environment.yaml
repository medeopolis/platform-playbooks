---
# (C) 2023 Medeopolis. Karl Goetz <karl+ansible@medeopolis.au>

# Things which are applied on all systems we manage - our baseline

- name: Pre-DebOps configuration changes
  hosts: all
  become: yes
  become_user: root
  tasks:
    - name: Check if UFW is installed
      stat:
        path: /usr/sbin/ufw
        get_attributes: false
        get_checksum: false
        get_mime: false
      register: ufw_stat
    - name: Permit access through UFW on port 80 (for Lets Encrypt)
      community.general.ufw:
        rule: allow
        comment: "Access to web ports for Lets Encrypt"
        port: 80
        proto: tcp
      # Only web servers need these ports open.
      when:
        - "'debops_service_nginx' in group_names"
        - ufw_stat.stat.exists
      # TODO: Catch when "Status: inactive" is returned by ufw. Might need a reboot to resolve that?
    - name: Create sudo.log (work around problem in resources role)
      copy:
        content: ''
        dest: /var/log/sudo.log
        owner: 'root'
        group: 'adm'
        mode: '0640'

# NOTE: Playbook imports have to sit at the top level.
- name: Run DebOps common.yaml
  ansible.builtin.import_playbook: debops.debops.common

# TODO: consider using sys; includes machine, kmod and some other roles.
# ansible.builtin.import_playbook: debops.debops.layer.sys.yml

- name: Configure kernel modules
  ansible.builtin.import_playbook: debops.debops.service.kmod

- name: Run DebOps Fail2ban
  ansible.builtin.import_playbook: debops.debops.service.fail2ban

# TODO: if auditd rules were changed restart the service
# Will have to check for file at start and finish then restart if its changed.

